// 用户认证相关模型

// 用户表
model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  username    String   @unique
  password    String
  firstName   String?
  lastName    String?
  avatar      String?
  phone       String?  @unique
  isActive    Boolean  @default(true)
  isVerified  Boolean  @default(false)
  lastLoginAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?

  // 关联关系
  userRoles UserRole[]
  sessions  UserSession[]
  apiLogs   ApiLog[]

  @@map("users")
}

// 用户会话表
model UserSession {
  id           String    @id @default(uuid())
  userId       Int
  accessToken  String    @db.Text
  refreshToken String    @db.Text
  deviceInfo   String?   @db.Text
  ipAddress    String?
  userAgent    String?   @db.Text
  isActive     Boolean   @default(true)
  expiresAt    DateTime
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  revokedAt    DateTime?

  // 关联关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([accessToken(length: 255)])
  @@index([refreshToken(length: 255)])
  @@map("user_sessions")
}

// 用户角色关联表
model UserRole {
  id         Int      @id @default(autoincrement())
  userId     Int
  roleId     Int
  assignedAt DateTime @default(now())
  assignedBy Int?

  // 关联关系
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
  @@map("user_roles")
}
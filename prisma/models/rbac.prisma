// 基于角色的访问控制 (RBAC) 模型

// 角色表
model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  code        String   @unique
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联关系
  userRoles       UserRole[]
  rolePermissions RolePermission[]

  @@map("roles")
}

// 权限表
model Permission {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  code        String   @unique
  resource    String
  action      String
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联关系
  rolePermissions RolePermission[]

  @@map("permissions")
}

// 角色权限关联表
model RolePermission {
  id           Int @id @default(autoincrement())
  roleId       Int
  permissionId Int
  assignedAt   DateTime @default(now())
  assignedBy   Int?

  // 关联关系
  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
  @@map("role_permissions")
}